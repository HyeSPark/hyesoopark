interface IconProps {
    width?: number;
    height?: number;
}

const Link:React.FC<IconProps> = ({width, height}) => (
    <svg width={width ? width : "24"} height={height ? height : "24"} viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
        <g clipPath="url(#clip0_1968_2493)">
        <path fillRule="evenodd" clipRule="evenodd" d="M15.8891 9.52503C16.1516 9.26257 16.5021 9.10676 16.8728 9.08774C17.2435 9.06871 17.6081 9.18782 17.8961 9.42203L18.0101 9.52503L20.1321 11.646C21.2473 12.7546 21.8827 14.2567 21.9017 15.8291C21.9206 17.4014 21.3215 18.9184 20.2333 20.0535C19.1451 21.1886 17.6548 21.8512 16.083 21.8986C14.5113 21.946 12.9837 21.3745 11.8291 20.307L11.6461 20.132L9.52507 18.01C9.25422 17.7379 9.09801 17.3723 9.08861 16.9885C9.07922 16.6047 9.21735 16.2319 9.47457 15.9469C9.73179 15.6618 10.0885 15.4863 10.4713 15.4564C10.854 15.4264 11.2337 15.5444 11.5321 15.786L11.6461 15.889L13.7681 18.01C14.3193 18.5571 15.0612 18.8692 15.8377 18.8805C16.6143 18.8919 17.3649 18.6016 17.9319 18.0708C18.4988 17.54 18.8378 16.81 18.8776 16.0344C18.9173 15.2588 18.6548 14.498 18.1451 13.912L18.0101 13.768L15.8891 11.646C15.6079 11.3647 15.4499 10.9833 15.4499 10.5855C15.4499 10.1878 15.6079 9.80632 15.8891 9.52503ZM8.81807 8.81803C9.08057 8.55557 9.43106 8.39976 9.80177 8.38074C10.1725 8.36171 10.5371 8.48082 10.8251 8.71503L10.9391 8.81803L15.1821 13.061C15.4548 13.3328 15.6126 13.6991 15.6228 14.084C15.633 14.4689 15.4947 14.843 15.2367 15.1288C14.9786 15.4146 14.6206 15.5902 14.2366 15.6193C13.8526 15.6484 13.4722 15.5287 13.1741 15.285L13.0601 15.182L8.81807 10.939C8.53686 10.6577 8.37889 10.2763 8.37889 9.87853C8.37889 9.48078 8.53686 9.09932 8.81807 8.81803ZM3.86807 3.86803C4.9623 2.77398 6.4369 2.14497 7.98391 2.11236C9.53091 2.07975 11.0307 2.64606 12.1701 3.69303L12.3541 3.86803L14.4741 5.99003C14.7449 6.26213 14.9011 6.62773 14.9105 7.01154C14.9199 7.39535 14.7818 7.76816 14.5246 8.05319C14.2674 8.33821 13.9106 8.51376 13.5279 8.54368C13.1451 8.57361 12.7655 8.45562 12.4671 8.21403L12.3531 8.11103L10.2331 5.99003C9.68257 5.43965 8.93969 5.1248 8.16135 5.11199C7.38302 5.09918 6.63018 5.38942 6.06186 5.92138C5.49355 6.45335 5.15426 7.18539 5.11568 7.96288C5.07709 8.74036 5.34222 9.5024 5.85507 10.088L5.99007 10.232L8.11007 12.354C8.38092 12.6261 8.53713 12.9917 8.54653 13.3755C8.55592 13.7594 8.41779 14.1322 8.16057 14.4172C7.90336 14.7022 7.54664 14.8778 7.16388 14.9077C6.78112 14.9376 6.40145 14.8196 6.10307 14.578L5.99007 14.475L3.86807 12.354C3.31081 11.7969 2.86876 11.1354 2.56717 10.4074C2.26558 9.67934 2.11035 8.89904 2.11035 8.11103C2.11035 7.32301 2.26558 6.54271 2.56717 5.81469C2.86876 5.08667 3.31081 4.42519 3.86807 3.86803Z"/>
        </g>
    </svg>
)

const Pdf:React.FC<IconProps> = ({width, height}) => (
    <svg width={width ? width : "24"} height={height ? height : "24"} viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
        <g clipPath="url(#clip0_1968_2485)">
            <path fillRule="evenodd" clipRule="evenodd" d="M12 2V8.5C12 8.89782 12.158 9.27936 12.4393 9.56066C12.7206 9.84196 13.1022 10 13.5 10H20V20C20 20.5304 19.7893 21.0391 19.4142 21.4142C19.0391 21.7893 18.5304 22 18 22H6C5.46957 22 4.96086 21.7893 4.58579 21.4142C4.21071 21.0391 4 20.5304 4 20V4C4 3.46957 4.21071 2.96086 4.58579 2.58579C4.96086 2.21071 5.46957 2 6 2H12ZM11.011 11.848C10.7716 13.3711 9.97513 14.7509 8.776 15.72C7.889 16.436 8.7 17.841 9.764 17.432C11.2028 16.8779 12.7962 16.8779 14.235 17.432C15.299 17.842 16.11 16.437 15.223 15.72C14.0239 14.7509 13.2274 13.3711 12.988 11.848C12.811 10.722 11.188 10.721 11.011 11.848ZM12 14.303L12.806 15.697H11.196L12 14.303ZM14 2.043C14.3789 2.12336 14.7263 2.31199 15 2.586L19.414 7C19.688 7.27373 19.8766 7.62112 19.957 8H14V2.043Z"/>
        </g>
    </svg>
)

const Video:React.FC<IconProps> = ({width, height}) => (
    <svg width={width ? width : "24"} height={height ? height : "24"} viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
        <g clipPath="url(#clip0_1968_2497)">
        <path fillRule="evenodd" clipRule="evenodd" d="M4 3C3.46957 3 2.96086 3.21071 2.58579 3.58579C2.21071 3.96086 2 4.46957 2 5V19C2 19.5304 2.21071 20.0391 2.58579 20.4142C2.96086 20.7893 3.46957 21 4 21H20C20.5304 21 21.0391 20.7893 21.4142 20.4142C21.7893 20.0391 22 19.5304 22 19V5C22 4.46957 21.7893 3.96086 21.4142 3.58579C21.0391 3.21071 20.5304 3 20 3H4ZM8.625 8.63C8.64719 8.43882 8.71376 8.25547 8.81939 8.09458C8.92502 7.93369 9.0668 7.79972 9.2334 7.70335C9.4 7.60698 9.58682 7.55089 9.77896 7.53954C9.97109 7.5282 10.1632 7.56191 10.34 7.638C10.844 7.854 11.908 8.34 13.256 9.118C14.2034 9.65944 15.1182 10.2558 15.996 10.904C16.1503 11.0188 16.2757 11.1682 16.362 11.34C16.4484 11.5119 16.4933 11.7016 16.4933 11.894C16.4933 12.0864 16.4484 12.2761 16.362 12.448C16.2757 12.6198 16.1503 12.7692 15.996 12.884C15.1182 13.5315 14.2033 14.1272 13.256 14.668C12.3137 15.2184 11.34 15.7132 10.34 16.15C10.1632 16.2263 9.97106 16.2602 9.77885 16.2489C9.58664 16.2377 9.39973 16.1816 9.23306 16.0852C9.0664 15.9888 8.9246 15.8548 8.81902 15.6938C8.71344 15.5328 8.64699 15.3493 8.625 15.158C8.50501 14.0742 8.44625 12.9844 8.449 11.894C8.449 10.343 8.561 9.175 8.625 8.63Z"/>
        </g>
    </svg>
)

const GoogleScholar:React.FC<IconProps> = ({width, height}) => (
    <svg width={width ? width : "24"} height={height ? height : "24"} viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
        <g clipPath="url(#clip0_1968_2497)">
            <path d="M4.53571 2.5C3.41183 2.5 2.5 3.41183 2.5 4.53571V19.4643C2.5 20.5882 3.41183 21.5 4.53571 21.5H19.4643C20.5882 21.5 21.5 20.5882 21.5 19.4643V4.53571C21.5 3.41183 20.5882 2.5 19.4643 2.5H4.53571ZM10.5027 5.21429H18.062L17.3635 5.75969V6.72211C17.6229 6.75541 17.5954 6.91127 17.5954 7.09775V11.6451C17.5954 11.8557 17.4231 12.0281 17.2125 12.0281H17.0716C16.8609 12.0281 16.6886 11.8557 16.6886 11.6451V7.09775C16.6886 6.9108 16.6614 6.75481 16.9228 6.72194V6.11691L14.9115 7.76639C14.9347 7.80948 14.9568 7.83709 14.9778 7.87327C15.1545 8.18613 15.2445 8.57508 15.2445 9.05059C15.2445 9.41498 15.1838 9.74248 15.0606 10.0315C14.938 10.3207 14.7889 10.5568 14.615 10.7387C14.441 10.9212 14.2666 11.088 14.092 11.2382C13.9176 11.3886 13.7685 11.5455 13.6464 11.7084C13.5234 11.8708 13.462 12.0387 13.462 12.2126C13.462 12.3869 13.5416 12.5638 13.7001 12.7422C13.858 12.9211 14.0523 13.0945 14.2821 13.2657C14.5123 13.4358 14.7421 13.6246 14.9718 13.83C15.2021 14.0351 15.3954 14.2991 15.5533 14.6198C15.7123 14.9415 15.7919 15.2957 15.7919 15.685C15.7919 16.1986 15.6609 16.6624 15.3997 17.0752C15.138 17.4863 14.7967 17.8144 14.3776 18.0549C13.9573 18.297 13.5078 18.4793 13.0285 18.6024C12.5481 18.7244 12.0715 18.7857 11.5955 18.7857C11.2913 18.7856 10.9876 18.762 10.687 18.7151C10.3811 18.6676 10.0747 18.5837 9.76597 18.4655C9.45676 18.3465 9.18283 18.2004 8.94533 18.0248C8.70736 17.8512 8.5157 17.6269 8.36884 17.3539C8.22193 17.0808 8.14898 16.7737 8.14898 16.4327C8.14898 16.0282 8.26166 15.653 8.48754 15.3032C8.71338 14.9558 9.01267 14.6659 9.38487 14.4362C10.0343 14.0322 11.0531 13.7826 12.4398 13.6882C12.1228 13.292 11.9638 12.9189 11.9638 12.5699C11.9638 12.3713 12.0156 12.1585 12.1184 11.9287C11.9493 11.9526 11.7788 11.9647 11.6081 11.965C10.8633 11.965 10.2342 11.7228 9.72339 11.2352C9.2126 10.7484 8.95754 10.1391 8.95754 9.40234C8.95754 9.32533 8.95975 9.25734 8.96522 9.18223H5.93798L10.5027 5.21429ZM11.8335 6.84006C11.3585 6.84006 10.9941 7.01093 10.7401 7.35196C10.4861 7.69209 10.3591 8.10414 10.3591 8.5881C10.3591 9.00033 10.4286 9.42003 10.5678 9.848C10.7064 10.2757 10.9335 10.6576 11.2515 10.9941C11.5685 11.3316 11.9374 11.4999 12.3565 11.4999C12.8237 11.4999 13.1887 11.3434 13.4505 11.0304C13.7111 10.7178 13.8419 10.3232 13.8419 9.84795C13.8419 9.44319 13.773 9.01942 13.6344 8.57623C13.4963 8.13252 13.266 7.73217 12.9446 7.37575C12.6243 7.01814 12.2532 6.84006 11.8335 6.84006ZM12.6188 14.1381C12.278 14.1381 11.9428 14.1683 11.6137 14.2284C11.2846 14.287 10.9599 14.3858 10.6396 14.5253C10.3182 14.6639 10.0586 14.8677 9.86093 15.1372C9.66215 15.4064 9.56321 15.7234 9.56321 16.0882C9.56321 16.4357 9.65057 16.7458 9.82509 17.0158C9.99906 17.2842 10.2288 17.4944 10.5143 17.6449C10.7998 17.7956 11.0991 17.9093 11.4116 17.9842C11.7247 18.0584 12.0434 18.0971 12.3681 18.0971C13.0103 18.0971 13.563 17.9525 14.0269 17.6633C14.4896 17.3742 14.7216 16.9278 14.7216 16.3253C14.7216 16.1986 14.7039 16.0737 14.6691 15.952C14.6327 15.8288 14.5968 15.7234 14.5615 15.6359C14.5262 15.55 14.4588 15.4464 14.3594 15.3272C14.2853 15.2374 14.2101 15.1485 14.134 15.0604C14.0821 14.9997 13.985 14.913 13.8419 14.7983C13.7001 14.6833 13.6095 14.6115 13.5692 14.585H13.5691C13.5293 14.5571 13.4261 14.4817 13.2599 14.3594C13.0937 14.2359 13.0026 14.1704 12.9865 14.1627C12.8992 14.147 12.7768 14.1381 12.6188 14.1381Z"/>
        </g>
    </svg>
)

const Behance:React.FC<IconProps> = ({width, height}) => (
    <svg width={width ? width : "24"} height={height ? height : "24"} viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
        <g clipPath="url(#clip0_1968_2497)">
            <path d="M7.354 11.107V9.50202C7.354 9.40702 7.354 9.36902 7.478 9.36902C8.541 9.36902 9.405 9.30602 9.834 9.55902C10.264 9.81102 10.282 10.159 10.289 10.263C10.296 10.367 10.293 10.516 10.093 10.879C9.893 11.242 8.998 11.249 8.352 11.249H7.497C7.392 11.249 7.354 11.211 7.354 11.107ZM10.3 12.789C10.399 12.9154 10.4697 13.0617 10.5073 13.2178C10.5448 13.374 10.5484 13.5364 10.5176 13.694C10.4869 13.8517 10.4226 14.0009 10.3292 14.1315C10.2357 14.2621 10.1153 14.3711 9.976 14.451C9.77142 14.5371 9.55195 14.5823 9.33 14.584H7.487C7.392 14.584 7.354 14.584 7.354 14.461V12.561C7.354 12.466 7.354 12.428 7.478 12.428H8.703C9.463 12.428 9.938 12.362 10.3 12.789Z"/>
            <path d="M16.989 11.909C16.938 11.7889 16.8607 11.6817 16.7627 11.5955C16.6648 11.5093 16.5487 11.4462 16.423 11.411C16.1718 11.3424 15.909 11.3278 15.6518 11.3684C15.3946 11.4089 15.1489 11.5035 14.931 11.646C14.7138 11.8654 14.5735 12.1492 14.531 12.455C14.531 12.562 14.531 12.582 14.658 12.582H17.028C17.145 12.582 17.145 12.582 17.135 12.435C17.1238 12.2512 17.0747 12.0719 16.989 11.909ZM16.989 11.909C16.938 11.7889 16.8597 11.6817 16.7617 11.5955C16.6638 11.5093 16.5487 11.4462 16.423 11.411C16.1718 11.3424 15.909 11.3278 15.6518 11.3684C15.3946 11.4089 15.1489 11.5035 14.931 11.646C14.7138 11.8654 14.5725 12.1492 14.53 12.455C14.53 12.562 14.53 12.582 14.657 12.582H17.028C17.145 12.582 17.145 12.582 17.135 12.435C17.1238 12.2512 17.0727 12.0719 16.987 11.909M18.1 2.5H6.4C5.36566 2.5 4.37368 2.91089 3.64228 3.64228C2.91089 4.37368 2.5 5.36566 2.5 6.4V18.1C2.5 19.1343 2.91089 20.1263 3.64228 20.8577C4.37368 21.5891 5.36566 22 6.4 22H18.1C19.1343 22 20.1263 21.5891 20.8577 20.8577C21.5891 20.1263 22 19.1343 22 18.1V6.4C22 5.36566 21.5891 4.37368 20.8577 3.64228C20.1263 2.91089 19.1343 2.5 18.1 2.5ZM14.278 8.71C14.278 8.633 14.278 8.603 14.366 8.603H17.525V9.423C17.525 9.423 17.528 9.481 17.476 9.481H14.415C14.278 9.481 14.278 9.481 14.278 9.345V8.71ZM11.353 15.877C10.153 16.53 8.136 16.267 5.747 16.267V8.184H9.559C10.534 8.184 11.694 8.428 12.006 9.461C12.168 9.91218 12.1582 10.4072 11.9783 10.8516C11.7984 11.296 11.4612 11.6585 11.031 11.87C11.4276 12.0167 11.7738 12.274 12.0287 12.6114C12.2836 12.9488 12.4365 13.3521 12.4693 13.7737C12.5021 14.1952 12.4135 14.6174 12.2139 14.9901C12.0143 15.3629 11.7121 15.6706 11.343 15.877H11.353ZM18.617 13.576H14.717C14.61 13.576 14.512 13.634 14.531 13.771C14.648 14.346 14.911 14.951 15.507 15.039C15.8217 15.1327 16.1587 15.1183 16.4643 14.9981C16.7698 14.8779 17.0264 14.6589 17.193 14.376C17.193 14.376 17.242 14.317 17.271 14.317H18.539C18.539 14.317 18.617 14.317 18.597 14.385C18.4633 14.7637 18.2654 15.1165 18.012 15.428C17.6731 15.7517 17.2642 15.993 16.8169 16.1331C16.3697 16.2731 15.8962 16.3083 15.4332 16.2357C14.9702 16.1632 14.5301 15.9849 14.1472 15.7148C13.7642 15.4446 13.4487 15.0898 13.225 14.678C13.0874 14.4034 13.0017 14.1057 12.972 13.8C12.7981 13.0316 12.931 12.2256 13.3425 11.5538C13.754 10.8819 14.4115 10.3973 15.175 10.203C17.388 9.725 18.792 11.246 18.792 13.391C18.7953 13.4161 18.7928 13.4416 18.7846 13.4655C18.7765 13.4894 18.7629 13.5112 18.7451 13.5291C18.7272 13.5469 18.7054 13.5605 18.6815 13.5686C18.6576 13.5768 18.6321 13.5793 18.607 13.576H18.617ZM16.433 11.411C16.1821 11.3414 15.919 11.3271 15.662 11.369C15.405 11.409 15.175 11.458 14.941 11.646C14.707 11.833 14.583 12.149 14.541 12.455C14.541 12.562 14.541 12.582 14.668 12.582H17.028C17.145 12.582 17.145 12.582 17.135 12.435C17.1238 12.2512 17.0747 12.0719 16.989 11.909C16.938 11.7889 16.8607 11.6817 16.7627 11.5955C16.6648 11.5093 16.5487 11.4462 16.423 11.411H16.433Z"/>
        </g>
    </svg>
)

const Github:React.FC<IconProps> = ({width, height}) => (
    <svg width={width ? width : "24"} height={height ? height : "24"} viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
        <g clipPath="url(#clip0_1968_2497)">
        <   path d="M12 2C10.6868 2 9.38642 2.25866 8.17317 2.7612C6.95991 3.26375 5.85752 4.00035 4.92893 4.92893C3.05357 6.8043 2 9.34784 2 12C2 16.42 4.87 20.17 8.84 21.5C9.34 21.58 9.5 21.27 9.5 21V19.31C6.73 19.91 6.14 17.97 6.14 17.97C5.68 16.81 5.03 16.5 5.03 16.5C4.12 15.88 5.1 15.9 5.1 15.9C6.1 15.97 6.63 16.93 6.63 16.93C7.5 18.45 8.97 18 9.54 17.76C9.63 17.11 9.89 16.67 10.17 16.42C7.95 16.17 5.62 15.31 5.62 11.5C5.62 10.39 6 9.5 6.65 8.79C6.55 8.54 6.2 7.5 6.75 6.15C6.75 6.15 7.59 5.88 9.5 7.17C10.29 6.95 11.15 6.84 12 6.84C12.85 6.84 13.71 6.95 14.5 7.17C16.41 5.88 17.25 6.15 17.25 6.15C17.8 7.5 17.45 8.54 17.35 8.79C18 9.5 18.38 10.39 18.38 11.5C18.38 15.32 16.04 16.16 13.81 16.41C14.17 16.72 14.5 17.33 14.5 18.26V21C14.5 21.27 14.66 21.59 15.17 21.5C19.14 20.16 22 16.42 22 12C22 10.6868 21.7413 9.38642 21.2388 8.17317C20.7362 6.95991 19.9997 5.85752 19.0711 4.92893C18.1425 4.00035 17.0401 3.26375 15.8268 2.7612C14.6136 2.25866 13.3132 2 12 2Z"/>
        </g>
    </svg>
)


export { Link, Pdf, Video, GoogleScholar, Behance, Github }